I"5
<ul id="markdown-toc">
  <li><a href="#열-네-번째-수업-이모저모" id="markdown-toc-열-네-번째-수업-이모저모">열 네 번째 수업 이모저모</a></li>
  <li><a href="#프로그래밍-단상-변화를-어떻게-만들어갈-것인가" id="markdown-toc-프로그래밍-단상-변화를-어떻게-만들어갈-것인가">프로그래밍 단상: 변화를 어떻게 만들어갈 것인가?</a></li>
  <li><a href="#immutable-객체-메모" id="markdown-toc-immutable-객체-메모">immutable 객체 메모</a></li>
  <li><a href="#orm---jpa" id="markdown-toc-orm---jpa">ORM - JPA</a></li>
  <li><a href="#links" id="markdown-toc-links">Links</a></li>
</ul>

<h1 id="열-네-번째-수업-이모저모">열 네 번째 수업 이모저모</h1>

<ul>
  <li>수업은 <code class="language-plaintext highlighter-rouge">2017-05-25 19:00:00 +0900</code> 무렵에 시작했을 것으로 추측.
    <ul>
      <li>이번 수업엔 내가 3 분 정도 지각했다.</li>
    </ul>
  </li>
  <li>오늘은 ORM을 사용해 본다.</li>
  <li>이제 종강까지 수업 두 번 남았다.</li>
</ul>

<h1 id="프로그래밍-단상-변화를-어떻게-만들어갈-것인가">프로그래밍 단상: 변화를 어떻게 만들어갈 것인가?</h1>

<p>회고를 통해 얻은 깨달음을 토대로 작은 성공을 반복해 가는 사이클.</p>

<p>작은 변화들의 누적으로 인한 큰 변화의 발생을 기대하는 방식이 마음에 든다.</p>

<h1 id="immutable-객체-메모">immutable 객체 메모</h1>

<p>어지간한 경우엔 그냥 불변 객체를 쓰는 쪽이 좋다고 생각한다.
자잘한 버그가 줄어들고, 읽기도 더 편하다. 사이드 이펙트를 관리하기도 좋다.</p>

<p>Java에서는 불변 객체의 사용이 꽤 번거로운 편이므로
Scala 같은 언어를 사용하는 것도 좋다고 생각한다.</p>

<p>덧붙이자면 객체 뿐 아니라 변수의 사용도 자제하고,
가능한 한 상수만을 사용해서 코딩하는 것도 좋다고 생각한다.</p>

<h1 id="orm---jpa">ORM - JPA</h1>

<p>이 책 한 권이면 된다.</p>

<p><a href="http://www.acornpub.co.kr/book/jpa-programmig">자바 ORM 표준 JPA 프로그래밍</a></p>

<h1 id="links">Links</h1>

<ul>
  <li>수업 자료
    <ul>
      <li><a href="https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KgqHPfpV1xrdi1_T9ne/lessons/-Kk9mNZRospN5eO7duC0">프로그래밍 단상</a></li>
      <li><a href="https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-Kihe0w5_EXX4St6SZcT">ORM 및 Spring Data JPA</a></li>
    </ul>
  </li>
</ul>
:ET