I"<ul id="markdown-toc">
  <li><a href="#열-번째-수업-이모저모" id="markdown-toc-열-번째-수업-이모저모">열 번째 수업 이모저모</a></li>
  <li><a href="#단상-삶과-프로그래밍" id="markdown-toc-단상-삶과-프로그래밍">단상: 삶과 프로그래밍</a></li>
  <li><a href="#di-프레임워크-1단계-실습" id="markdown-toc-di-프레임워크-1단계-실습">DI 프레임워크 1단계 실습</a></li>
  <li><a href="#links" id="markdown-toc-links">Links</a></li>
</ul>

<h1 id="열-번째-수업-이모저모">열 번째 수업 이모저모</h1>

<ul>
  <li>수업은 <code class="language-plaintext highlighter-rouge">2017-05-11 19:03:00 +0900</code>에 시작.</li>
  <li>오늘은 지난 시간 feedback 후 DI를 구현하는 연습을 한다.</li>
</ul>

<h1 id="단상-삶과-프로그래밍">단상: 삶과 프로그래밍</h1>

<ul>
  <li>어떻게 일할 것인가?</li>
  <li>내가 일지를 작성하는 방식을 공유하였다.</li>
</ul>

<h1 id="di-프레임워크-1단계-실습">DI 프레임워크 1단계 실습</h1>

<ul>
  <li>요구사항</li>
</ul>

<blockquote>
  <p>새로 만든 MVC 프레임워크는 자바 리플렉션을 활용해 @Controller 애노테이션이 설정되어 있는 클래스를 찾아 인스턴스를 생성하고, URL 매핑 작업을 자동화했다. 같은 방법으로 각 클래스에 대한 인스턴스 생성 및 의존관계 설정을 애노테이션으로 자동화한다.</p>
</blockquote>

<blockquote>
  <p>먼저 애노테이션은 각 클래스 역할에 맞도록 컨트롤러는 이미 추가되어 있는 @Controller, 서비스는 @Service, DAO는 @Repository 애노테이션을 설정한다. 이 3개의 설정으로 생성된 각 인스턴스 간의 의존관계는 @Inject 애노테이션을 사용한다.</p>
</blockquote>

<ul>
  <li>
    <p>내 구현 내용은 <a href="https://github.com/johngrib/jwp-basic/tree/step10-johngrib">GitHub</a>에 올려두었다.</p>
  </li>
  <li>
    <p>교수님은 다들 부담스럽겠지만 재귀를 사용해야 할 것이라며 재귀를 강조하셨지만, 나는 오히려 for loop보다 재귀를 선호하는 편이므로 자신만만하게 작업을 시작했다.</p>
  </li>
  <li>
    <p>그러나 몇 가지 메서드가 이미 구현되어 있다는 걸 생각하지 못했고, (<code class="language-plaintext highlighter-rouge">BeanFactoryUtils.getInjectedConstructor</code>나, <code class="language-plaintext highlighter-rouge">BeanFactoryUtils.findConcreteClass</code> 등) Repository 도 구현된 게 있다는 걸 발견하지 못해서 3 시간 가까이 갈피를 잡지 못하고 헤메이다 간신히 힌트를 보고 숙제를 할 수 있었다.</p>
  </li>
  <li>
    <p>일요일까지 끌고 오긴 했지만(…) 과제를 완수할 수 있어서 다행이라 생각한다.</p>
  </li>
</ul>

<h1 id="links">Links</h1>

<ul>
  <li><a href="https://github.com/johngrib/jwp-basic/tree/step10-johngrib">과제 완료</a></li>
  <li><a href="https://www.martinfowler.com/articles/injection.html#FormsOfDependencyInjection">Martin Fowler: Inversion of Control Containers and the Dependency Injection pattern</a></li>
  <li>수업 자료
    <ul>
      <li><a href="https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KgqHPfpV1xrdi1_T9ne/lessons/-Ki7rZnr3DpctbqOtJQn">삶과 프로그래밍: 어떻게 일할 것인가?</a></li>
      <li><a href="https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9qPOW42m1nnuoyvXz/lessons/-KiXzwhTznbMAcSlMO7w">DI 프레임워크 1단계 실습 및 힌트</a></li>
    </ul>
  </li>
</ul>
:ET